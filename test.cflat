int t;
struct Point {
    int x;
    int y;
    int Point;
};
struct Line {
    struct Point po;
    int slope;
};
int f(int x, bool b) { }
void g() {
    int a;
    bool b;
    struct Point p;
    p.x = a;
    b = a == 3;
    f(a + p.y*2, b);
    g();
}
int f(int c) {

}
int test_struct() {
    struct Point p;
    struct Line l;
    p.x = 1;
    l.slope = 2;
    l.po.x = 1;
    l.po.Point = 1;
}
int compute(){
    int a;
    int b;
    int c;
    int d;
    bool x;
    bool y;
    bool z;
    a = 1;
    b = 2 + 3;
    b = -1;
    b=-a;
    b=-(-a);
    b = a;
    c = a + 1;
    c = 1 + a;
    c = a + b;
    c = a - 1;
    c = 1 - a;
    c = a - b;
    c=a*2;c=5*a;c=a*b;
    c=a/2;c=5/a;c=a/b;
    x=true;y=false;
    z=(true||false)&&(!true);
    z=x&&true;z=x&&false;z=false&&z;z=x&&y;
    z=x||true;z=x||false;z=false||z;z=x||y;
    z=!x;z=!true;z=!!!y;
    a++;b--;
    // p.x = 1;
    cin>>a;
    cout<<b;
    return a;
}

void compare(int a, int b, int c){
    bool z;
    z=a>1;z=1>a;z=a>b;
    z=a<1;z=1<a;z=a<b;
    z=a>=1;z=1>=a;z=a>=b;
    z=a<=1;z=1<=a;z=a<=b;
    z=a==1;z=1==a;z=a==b;
    z=a!=1;z=1!=a;z=a!=b;
}

bool test_if(int d, int e) {
    int a;
    int b;
    int c;
    bool z;
    a = 1;
    b = 2;
    if (a < b) {
        cin >> a;
    }
    c = a + b;
    if (c >= d){
        int g;
        a++;
    }else{
        if (c>=e){
            b++;
        }
    }
    return d<=e;
}

int test_loop() {
    int a;
    int b;
    int c;
    int sum1;
    int sum2;
    int sum3;
    a = 0;
    while(a<=100){
        sum1 = sum1 + a;
    }
    cout<<sum1;
    b=100;
    sum2 = 0;
    repeat(b>=0){
        sum2 = sum2 + b;
        b--;
    }
    cout << (sum1==sum2);
    a = 0;
    while(a<=100){
        if (a/2 > 10){
            sum3 = sum3 + a;
        }
    }
    return sum3;
}

int main(){
    int a;
    int b;
    int c;
    struct Point p;
    bool z;
    a = compute(a,b,c);
    compare(a, b, c);
    p.x = a;
    z=test_if(p.x,b);
    c = test_loop();
}